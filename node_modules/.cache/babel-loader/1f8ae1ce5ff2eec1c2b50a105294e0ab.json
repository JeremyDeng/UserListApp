{"ast":null,"code":"var _jsxFileName = \"/Users/jeremyd/Projects/userlist/src/components/home.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { getList, deleteUser } from \"../actions\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        filterInfo: e.target.value\n      });\n    };\n\n    this.handleData = filterInfo => {\n      let tmpUsers = [...this.props.users]; //handle filter\n\n      if (!!filterInfo) {\n        filterInfo = filterInfo.toLowerCase();\n        tmpUsers = tmpUsers.filter(user => {\n          return user.first_name.toLowerCase().indexOf(filterInfo) !== -1 || user.last_name.toLowerCase().indexOf(filterInfo) !== -1;\n        });\n      }\n\n      return tmpUsers;\n    };\n\n    this.handleDelete = record => {\n      const _this$props = this.props,\n            history = _this$props.history,\n            deleteUser = _this$props.deleteUser;\n      deleteUser(record._id);\n    };\n\n    this.handleClickAdd = () => {\n      this.props.history.push(\"/add\");\n    };\n\n    this.state = {\n      filterInfo: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const getList = this.props.getList;\n    getList();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"User List\"), React.createElement(\"table\", {\n      className: \"table table-striped table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n} //connect redux to component\n\n\nconst mapStateToProps = state => ({\n  users: state.list.data,\n  err: state.list.err\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getList: () => {\n    dispatch(getList());\n  },\n  deleteUser: (id, message, history) => {\n    dispatch(deleteUser(id, message, history));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/jeremyd/Projects/userlist/src/components/home.js"],"names":["React","connect","getList","deleteUser","Home","Component","constructor","props","handleChange","e","setState","filterInfo","target","value","handleData","tmpUsers","users","toLowerCase","filter","user","first_name","indexOf","last_name","handleDelete","record","history","_id","handleClickAdd","push","state","componentDidMount","render","mapStateToProps","list","data","err","mapDispatchToProps","dispatch","id","message"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport {getList, deleteUser} from \"../actions\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterInfo: \"\"\n        };\n    }\n    \n    componentDidMount() {\n        const { getList } = this.props;\n        getList();\n    }\n\n    handleChange = e => {\n        this.setState({ filterInfo: e.target.value });\n    }\n\n    handleData = (filterInfo) => {\n        let tmpUsers = [...this.props.users];\n\n        //handle filter\n        if (!!filterInfo) {\n            filterInfo = filterInfo.toLowerCase();\n            tmpUsers = tmpUsers.filter((user) => {\n                return (user.first_name.toLowerCase().indexOf(filterInfo) !== -1) ||\n                    (user.last_name.toLowerCase().indexOf(filterInfo) !== -1);\n            });\n        }\n\n        return tmpUsers;\n    }\n\n    handleDelete = (record) => {\n        const { history, deleteUser } = this.props;\n        deleteUser(record._id);\n    }\n\n    handleClickAdd = () => {\n        this.props.history.push(\"/add\");\n    };\n\n    render(){\n        return (  \n            <div> \n                <h3>User List</h3>\n                <table className=\"table table-striped table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Age</th>\n                            <th>Gender</th>\n                            <th>Edit</th>\n                            <th>Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {/* { this.state.users.map((eachUser, idx) => {\n                            return (<User user = {eachUser} key = {idx} onDeleteHandler = {this.onDeleteHandler} onEditHandler = {this.onEditHandler}/>);\n                            })\n                        } */}\n                    </tbody>\n                </table>               \n            </div>\n    \n        ); \n    \n    }\n}\n\n//connect redux to component\nconst mapStateToProps = state => (\n    {\n        users: state.list.data,\n        err: state.list.err\n    }\n);\n\nconst mapDispatchToProps = dispatch => (\n    {\n        getList: () => {\n            dispatch(getList());\n        },\n        deleteUser: (id, message, history) => {\n            dispatch(deleteUser(id, message, history));\n        }\n    }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}