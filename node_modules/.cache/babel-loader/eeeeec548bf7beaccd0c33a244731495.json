{"ast":null,"code":"import _objectSpread from \"/Users/jeremyd/Projects/userlist/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initState = {\n  data: [],\n  isLoading: false,\n  err: null\n};\n\nconst list = (state = initState, action) => {\n  switch (action.type) {\n    case \"GET_LIST_REQUEST\":\n      {\n        return _objectSpread({}, state, {\n          isLoading: true,\n          err: null\n        });\n      }\n\n    case \"GET_LIST_SUCCESS\":\n      {\n        return {\n          data: action.data,\n          isLoading: false,\n          err: null\n        };\n      }\n\n    case \"GET_LIST_FAIL\":\n      {\n        return _objectSpread({}, state, {\n          isLoading: false,\n          err: action.err\n        });\n      }\n\n    case \"ADD_LIST_SUCCESS\":\n      state.data.push(action.data);\n      const newdata = state.data;\n      return {\n        data: newdata,\n        isLoading: false,\n        err: null\n      };\n\n    case \"ADD_LIST_FAIL\":\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.err\n      });\n\n    case \"EDIT_LIST_REQUEST\":\n      {\n        return _objectSpread({}, state, {\n          isLoading: true\n        });\n      }\n\n    case \"EDIT_LIST_SUCCESS\":\n      const newArray = state.data.map(x => {\n        if (x._id === action.data._id) {\n          return action.data;\n        } else {\n          return x;\n        }\n      });\n      return {\n        data: newArray,\n        isLoading: false,\n        err: null\n      };\n\n    case \"EDIT_LIST_FAIL\":\n      {\n        return _objectSpread({}, state, {\n          isLoading: false,\n          err: action.err\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default list;","map":{"version":3,"sources":["/Users/jeremyd/Projects/userlist/src/reducers/list.js"],"names":["initState","data","isLoading","err","list","state","action","type","push","newdata","newArray","map","x","_id"],"mappings":";AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,SAAS,EAAE,KAFK;AAGhBC,EAAAA,GAAG,EAAE;AAHW,CAAlB;;AAMA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGL,SAAT,EAAoBM,MAApB,KAA+B;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AAAyB;AACrB,iCACOF,KADP;AAEIH,UAAAA,SAAS,EAAE,IAFf;AAGIC,UAAAA,GAAG,EAAE;AAHT;AAKH;;AACD,SAAK,kBAAL;AAAyB;AACrB,eAAO;AACHF,UAAAA,IAAI,EAAEK,MAAM,CAACL,IADV;AAEHC,UAAAA,SAAS,EAAE,KAFR;AAGHC,UAAAA,GAAG,EAAE;AAHF,SAAP;AAKH;;AACD,SAAK,eAAL;AAAsB;AAClB,iCACOE,KADP;AAEIH,UAAAA,SAAS,EAAE,KAFf;AAGIC,UAAAA,GAAG,EAAEG,MAAM,CAACH;AAHhB;AAKH;;AACD,SAAK,kBAAL;AACEE,MAAAA,KAAK,CAACJ,IAAN,CAAWO,IAAX,CAAgBF,MAAM,CAACL,IAAvB;AACA,YAAMQ,OAAO,GAAGJ,KAAK,CAACJ,IAAtB;AACA,aAAO;AACHA,QAAAA,IAAI,EAAGQ,OADJ;AAEHP,QAAAA,SAAS,EAAE,KAFR;AAGHC,QAAAA,GAAG,EAAE;AAHF,OAAP;;AAKF,SAAK,eAAL;AACI,+BACKE,KADL;AAEEH,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,GAAG,EAAEG,MAAM,CAACH;AAHd;;AAKJ,SAAK,mBAAL;AAA0B;AACtB,iCACOE,KADP;AAEIH,UAAAA,SAAS,EAAE;AAFf;AAIH;;AACD,SAAK,mBAAL;AACI,YAAMQ,QAAQ,GAAGL,KAAK,CAACJ,IAAN,CAAWU,GAAX,CAAeC,CAAC,IAAI;AACnC,YAAGA,CAAC,CAACC,GAAF,KAAUP,MAAM,CAACL,IAAP,CAAYY,GAAzB,EAA8B;AAC1B,iBAAOP,MAAM,CAACL,IAAd;AACH,SAFD,MAGI;AACA,iBAAOW,CAAP;AACH;AACF,OAPgB,CAAjB;AAQA,aAAO;AACLX,QAAAA,IAAI,EAAGS,QADF;AAELR,QAAAA,SAAS,EAAG,KAFP;AAGLC,QAAAA,GAAG,EAAG;AAHD,OAAP;;AAKJ,SAAK,gBAAL;AAAuB;AACnB,iCACOE,KADP;AAEIH,UAAAA,SAAS,EAAE,KAFf;AAGIC,UAAAA,GAAG,EAAEG,MAAM,CAACH;AAHhB;AAKH;;AACD;AAAS;AACL,eAAOE,KAAP;AACH;AAjEL;AAmED,CApED;;AAsEA,eAAeD,IAAf","sourcesContent":["const initState = {\n  data: [],\n  isLoading: false,\n  err: null\n};\n\nconst list = (state = initState, action) => {\n  switch (action.type) {\n      case \"GET_LIST_REQUEST\": {\n          return {\n              ...state,\n              isLoading: true,\n              err: null\n          }\n      }\n      case \"GET_LIST_SUCCESS\": {\n          return {\n              data: action.data,\n              isLoading: false,\n              err: null\n          }\n      }\n      case \"GET_LIST_FAIL\": {\n          return {\n              ...state,\n              isLoading: false,\n              err: action.err\n          }\n      }\n      case \"ADD_LIST_SUCCESS\": \n        state.data.push(action.data);\n        const newdata = state.data;\n        return {\n            data : newdata,\n            isLoading: false,\n            err: null\n      }\n      case \"ADD_LIST_FAIL\":\n          return {\n            ...state,\n            isLoading: false,\n            err: action.err\n        }\n      case \"EDIT_LIST_REQUEST\": {\n          return {\n              ...state,\n              isLoading: true\n          }\n      }\n      case \"EDIT_LIST_SUCCESS\": \n          const newArray = state.data.map(x => {\n            if(x._id === action.data._id) {\n                return action.data;\n            }\n            else{\n                return x;\n            }\n          })\n          return {\n            data : newArray,\n            isLoading : false,\n            err : null\n      }\n      case \"EDIT_LIST_FAIL\": {\n          return {\n              ...state,\n              isLoading: false,\n              err: action.err\n          }\n      }\n      default: {\n          return state;\n      }\n  }\n}\n\nexport default list;"]},"metadata":{},"sourceType":"module"}