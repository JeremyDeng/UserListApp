{"ast":null,"code":"var _jsxFileName = \"/Users/jeremyd/Projects/userlist/src/components/home.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { getList, deleteUser } from \"../actions\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onDeleteHandler = userId => {\n      this.props.deleteUser(userId);\n    };\n\n    this.onEditHandler = Id => {\n      this.props.getUserById(Id);\n      this.props.history.push(\"/edit/\".concat(Id));\n    };\n\n    this.state = {\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    const getList = this.props.getList;\n    getList();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      users: nextProps.users\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"User List\"), React.createElement(\"table\", {\n      className: \"table table-striped table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.users.map((eachUser, idx) => {\n      return React.createElement(User, {\n        user: eachUser,\n        key: idx,\n        onDeleteHandler: this.onDeleteHandler,\n        onEditHandler: this.onEditHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }))));\n  }\n\n} //connect redux to component\n\n\nconst mapStateToProps = state => ({\n  users: state.list.data,\n  err: state.list.err\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getList: () => {\n    dispatch(getList());\n  },\n  deleteUser: (id, message, history) => {\n    dispatch(deleteUser(id, message, history));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/jeremyd/Projects/userlist/src/components/home.js"],"names":["React","connect","getList","deleteUser","Home","Component","constructor","props","onDeleteHandler","userId","onEditHandler","Id","getUserById","history","push","state","users","componentDidMount","componentWillReceiveProps","nextProps","setState","render","map","eachUser","idx","mapStateToProps","list","data","err","mapDispatchToProps","dispatch","id","message"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport {getList, deleteUser} from \"../actions\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          users: [],\n        };\n    }\n    \n    componentDidMount() {\n        const { getList } = this.props;\n        getList();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ users: nextProps.users });\n    }\n\n    onDeleteHandler = (userId) => {\n\n        this.props.deleteUser(userId);\n\n    }\n\n    onEditHandler = (Id) => {\n        this.props.getUserById(Id);\n        this.props.history.push(`/edit/${Id}`);    \n    }\n\n    render(){\n        return (  \n            <div> \n                <h3>User List</h3>\n                <table className=\"table table-striped table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Age</th>\n                            <th>Gender</th>\n                            <th>Edit</th>\n                            <th>Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.state.users.map((eachUser, idx) => {\n                            return (<User user = {eachUser} key = {idx} onDeleteHandler = {this.onDeleteHandler} onEditHandler = {this.onEditHandler}/>);\n                            })\n                        }\n                    </tbody>\n                </table>               \n            </div>\n    \n        ); \n    \n    }\n}\n\n//connect redux to component\nconst mapStateToProps = state => (\n    {\n        users: state.list.data,\n        err: state.list.err\n    }\n);\n\nconst mapDispatchToProps = dispatch => (\n    {\n        getList: () => {\n            dispatch(getList());\n        },\n        deleteUser: (id, message, history) => {\n            dispatch(deleteUser(id, message, history));\n        }\n    }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}